// import { Component, importProvidersFrom, inject, OnInit } from '@angular/core';
// import { ActivatedRoute } from '@angular/router';
// import { GeolocationService } from 'src/services/geolocation.services';
// import * as L from 'leaflet';

// @Component({
//   selector: 'app-folder',
//   templateUrl: './folder.page.html',
//   styleUrls: ['./folder.page.scss'],
//   standalone: false,
// })
// export class FolderPage implements OnInit {
//   public folder!: string;
//   private activatedRoute = inject(ActivatedRoute);
//   private map: any;
//   public currentLocation: any;
//   private mapInitialized = false;

//   // Th√¥ng tin nh√≥m v√† app
//   public appInfo = {
//     name: 'GIS Mobile App',
//     description: '·ª®ng d·ª•ng b·∫£n ƒë·ªì chuy√™n ƒë·ªÅ s·ª≠ d·ª•ng Ionic Angular',
//     version: '1.0.0'
//   };

//   public teamInfo = {
//     groupName: 'Nh√≥m 9',
//     className: 'DH22HM',
//     major: 'H·ªá th·ªëng th√¥ng tin ƒë·ªãa l√Ω',
//     members: [
//       'ƒêinh Tr√∫c V√¢n: 22166102',
//       'Nguy·ªÖn Qu·ª≥nh Nhi: 22166065',
//       'H·ªì V√µ Minh Tr∆∞·ªùng: 22166093',
//       'Nguy·ªÖn Minh Ph√∫: 22166069',
//       'Tr·∫ßn Xu√¢n Tr∆∞·ªùng: 22166095',
//       'Nguy·ªÖn Ho√†ng Minh Tu·∫•n: 22166098',
//       'Nguy·ªÖn ƒê·ª©c Tr·ªçng: 22166091',
//       'Tr·∫ßn D∆∞∆°ng Vinh: 22166103',
//     ]
//   };

//   // D·ªØ li·ªáu b·∫£n ƒë·ªì chuy√™n ƒë·ªÅ m·∫´u
//   public thematicLayers = [
//     {
//       name: 'Tr∆∞·ªùng ƒê·∫°i h·ªçc',
//       description: 'C√°c tr∆∞·ªùng ƒë·∫°i h·ªçc t·∫°i TP.HCM',
//       data: [
//         { name: 'ƒêH B√°ch Khoa', lat: 10.7721, lng: 106.6576, info: 'ƒê·∫°i h·ªçc B√°ch khoa TP.HCM' },
//         { name: 'ƒêH Khoa h·ªçc T·ª± nhi√™n', lat: 10.7626, lng: 106.6824, info: 'ƒê·∫°i h·ªçc Khoa h·ªçc T·ª± nhi√™n' },
//         { name: 'ƒêH Kinh t·∫ø', lat: 10.7308, lng: 106.6941, info: 'ƒê·∫°i h·ªçc Kinh t·∫ø TP.HCM' }
//       ]
//     },
//     {
//       name: 'B·ªánh vi·ªán',
//       description: 'C√°c b·ªánh vi·ªán l·ªõn t·∫°i TP.HCM',
//       data: [
//         { name: 'BV Ch·ª£ R·∫´y', lat: 10.7542, lng: 106.6665, info: 'B·ªánh vi·ªán Ch·ª£ R·∫´y' },
//         { name: 'BV B√¨nh Dan', lat: 10.7507, lng: 106.6647, info: 'B·ªánh vi·ªán B√¨nh Dan' },
//         { name: 'BV 115', lat: 10.7825, lng: 106.6958, info: 'B·ªánh vi·ªán 115' }
//       ]
//     }
//   ];


//   constructor(
//     private geolocationService: GeolocationService
//   ) { }

//   ngOnInit() {
//     this.folder = this.activatedRoute.snapshot.paramMap.get('id') as string;

//     if (this.folder === 'explore') {
//       setTimeout(() => {
//         this.initializeMap();
//       }, 200);
//     }
//   }

//   ngOnDestroy() {
//     if (this.map) {
//       this.map.remove();
//       this.map = null;
//       this.mapInitialized = false;
//     }
//   }


//   async getCurrentLocation() {
//     try {
//       const permissions = await this.geolocationService.checkPermissions();

//       if (permissions.location !== 'granted') {
//         await this.geolocationService.requestPermissions();
//       }

//       this.currentLocation = await this.geolocationService.getCurrentPosition();

//       if (this.map && this.currentLocation) {
//         // Th√™m marker v·ªã tr√≠ hi·ªán t·∫°i l√™n b·∫£n ƒë·ªì
//         const userMarker = L.marker([this.currentLocation.latitude, this.currentLocation.longitude])
//           .addTo(this.map)
//           .bindPopup(`
//             <div>
//               <h4>V·ªã tr√≠ hi·ªán t·∫°i</h4>
//               <p>Lat: ${this.currentLocation.latitude.toFixed(6)}</p>
//               <p>Lng: ${this.currentLocation.longitude.toFixed(6)}</p>
//               <p>ƒê·ªô ch√≠nh x√°c: ${this.currentLocation.accuracy}m</p>
//             </div>
//           `);

//         // Di chuy·ªÉn b·∫£n ƒë·ªì ƒë·∫øn v·ªã tr√≠ hi·ªán t·∫°i
//         this.map.setView([this.currentLocation.latitude, this.currentLocation.longitude], 15);
//       }
//     } catch (error) {
//       console.error('L·ªói khi l·∫•y v·ªã tr√≠:', error);
//       alert('Kh√¥ng th·ªÉ l·∫•y v·ªã tr√≠ hi·ªán t·∫°i. Vui l√≤ng ki·ªÉm tra quy·ªÅn truy c·∫≠p v·ªã tr√≠.');
//     }
//   }

//   // private initializeMap() {
//   //   // Kh·ªüi t·∫°o b·∫£n ƒë·ªì v·ªõi OpenStreetMap
//   //   this.map = L.map('map', {
//   //     center: [10.762622, 106.660172],
//   //     zoom: 11,
//   //     scrollWheelZoom: true,
//   //     touchZoom: true,
//   //     doubleClickZoom: true,
//   //     boxZoom: false,
//   //     preferCanvas: true, // TƒÉng performance
//   //     renderer: L.canvas() // S·ª≠ d·ª•ng Canvas thay v√¨ SVG
//   //   });

//   //   // Th√™m layer OpenStreetMap
//   //   L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
//   //     attribution: '¬© OpenStreetMap contributors'
//   //   }).addTo(this.map);

//   //   // Th√™m Google Maps layer (v·ªá tinh)
//   //   const googleSat = L.tileLayer('http://{s}.google.com/vt/lyrs=s&x={x}&y={y}&z={z}', {
//   //     maxZoom: 20,
//   //     subdomains: ['mt0', 'mt1', 'mt2', 'mt3']
//   //   });

//   //   // Th√™m Google Maps layer (ƒë∆∞·ªùng)
//   //   const googleStreets = L.tileLayer('http://{s}.google.com/vt/lyrs=m&x={x}&y={y}&z={z}', {
//   //     maxZoom: 20,
//   //     subdomains: ['mt0', 'mt1', 'mt2', 'mt3']
//   //   });

//   //   // Th√™m control layers
//   //   const baseMaps = {
//   //     "OpenStreetMap": L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'),
//   //     "Google Streets": googleStreets,
//   //     "Google Satellite": googleSat
//   //   };

//   //   L.control.layers(baseMaps).addTo(this.map);

//   //   // Th√™m c√°c ƒëi·ªÉm d·ªØ li·ªáu chuy√™n ƒë·ªÅ
//   //   this.addThematicLayers();
//   // }

//   private initializeMap() {
//     // Ki·ªÉm tra n·∫øu map ƒë√£ ƒë∆∞·ª£c kh·ªüi t·∫°o
//     if (this.mapInitialized) {
//       return;
//     }
//     // Kh·ªüi t·∫°o b·∫£n ƒë·ªì v·ªõi OpenStreetMap (load nhanh h∆°n Google Maps)
//     this.map = L.map('map', {
//       center: [10.762622, 106.660172],
//       zoom: 11,
//       scrollWheelZoom: true,
//       touchZoom: true,
//       doubleClickZoom: true,
//       boxZoom: false,
//       preferCanvas: true,
//       renderer: L.canvas(),
//       // QUAN TR·ªåNG: C·ªë ƒë·ªãnh k√≠ch th∆∞·ªõc
//       zoomControl: true,
//       attributionControl: true
//     });

//     // S·ª≠ d·ª•ng OpenStreetMap l√†m layer ch√≠nh (load nhanh nh·∫•t)
//     const osmLayer = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
//       attribution: '¬© OpenStreetMap contributors',
//       maxZoom: 18,
//       minZoom: 8
//     }).addTo(this.map);

//     // C√°c layer b·ªï sung (optional)
//     const googleSat = L.tileLayer('https://mt1.google.com/vt/lyrs=s&x={x}&y={y}&z={z}', {
//       attribution: '¬© Google',
//       maxZoom: 18,
//       minZoom: 8
//     });

//     const googleStreets = L.tileLayer('https://mt1.google.com/vt/lyrs=m&x={x}&y={y}&z={z}', {
//       attribution: '¬© Google',
//       maxZoom: 18,
//       minZoom: 8
//     });

//     // Control layers (·∫©n m·∫∑c ƒë·ªãnh ƒë·ªÉ g·ªçn g√†ng)
//     const baseMaps = {
//       "OpenStreetMap": osmLayer,
//       "Google Streets": googleStreets,
//       "Google Satellite": googleSat
//     };

//     const layerControl = L.control.layers(baseMaps, undefined, {
//       collapsed: true,
//       position: 'topright'
//     }).addTo(this.map);

//     // QUAN TR·ªåNG: Fix k√≠ch th∆∞·ªõc sau khi kh·ªüi t·∫°o
//     setTimeout(() => {
//       if (this.map) {
//         this.map.invalidateSize();
//       }
//     }, 100);

//     // Th√™m c√°c ƒëi·ªÉm d·ªØ li·ªáu chuy√™n ƒë·ªÅ
//     this.addThematicLayers();

//     this.mapInitialized = true;

//     // X·ª≠ l√Ω s·ª± ki·ªán resize ƒë·ªÉ tr√°nh map b·ªã l·ªói k√≠ch th∆∞·ªõc
//     this.map.on('resize', () => {
//       if (this.map) {
//         this.map.invalidateSize();
//       }
//     });
//   }

//   private addThematicLayers() {
//     // T·∫°o c√°c icon kh√°c nhau cho t·ª´ng lo·∫°i
//     const universityIcon = L.divIcon({
//       className: 'custom-icon university-icon',
//       html: 'üéì',
//       iconSize: [30, 30]
//     });

//     const hospitalIcon = L.divIcon({
//       className: 'custom-icon hospital-icon',
//       html: 'üè•',
//       iconSize: [30, 30]
//     });

//     // Th√™m layer tr∆∞·ªùng ƒë·∫°i h·ªçc
//     this.thematicLayers[0].data.forEach(point => {
//       L.marker([point.lat, point.lng], { icon: universityIcon })
//         .addTo(this.map)
//         .bindPopup(`
//           <div>
//             <h4>${point.name}</h4>
//             <p>${point.info}</p>
//             <p><strong>Lo·∫°i:</strong> Tr∆∞·ªùng ƒê·∫°i h·ªçc</p>
//           </div>
//         `);
//     });

//     // Th√™m layer b·ªánh vi·ªán
//     this.thematicLayers[1].data.forEach(point => {
//       L.marker([point.lat, point.lng], { icon: hospitalIcon })
//         .addTo(this.map)
//         .bindPopup(`
//           <div>
//             <h4>${point.name}</h4>
//             <p>${point.info}</p>
//             <p><strong>Lo·∫°i:</strong> B·ªánh vi·ªán</p>
//           </div>
//         `);
//     });
//   }


//   getPageTitle(): string {
//     switch (this.folder) {
//       case 'home': return 'Trang ch·ªß';
//       case 'about': return 'Gi·ªõi thi·ªáu';
//       case 'explore': return 'Kh√°m ph√° b·∫£n ƒë·ªì';
//       case 'contact': return 'Li√™n h·ªá';
//       default: return this.folder;
//     }
//   }

// }


// import { Component, inject, OnInit, OnDestroy, AfterViewInit } from '@angular/core';
// import { ActivatedRoute } from '@angular/router';
// import { GeolocationService } from 'src/services/geolocation.services';
// import * as L from 'leaflet';

// @Component({
//   selector: 'app-folder',
//   templateUrl: './folder.page.html',
//   styleUrls: ['./folder.page.scss'],
//   standalone: false,
// })
// export class FolderPage implements OnInit, OnDestroy, AfterViewInit {
//   public folder!: string;
//   private activatedRoute = inject(ActivatedRoute);
//   private map: any;
//   private mapInitialized = false;
//   public currentLocation: any;

//   // Th√¥ng tin nh√≥m v√† app
//   public appInfo = {
//     name: 'GIS Mobile App',
//     description: '·ª®ng d·ª•ng b·∫£n ƒë·ªì chuy√™n ƒë·ªÅ s·ª≠ d·ª•ng Ionic Angular',
//     version: '1.0.0'
//   };

//   public teamInfo = {
//     groupName: 'Nh√≥m 9',
//     className: 'DH22HM',
//     major: 'H·ªá th·ªëng th√¥ng tin ƒë·ªãa l√Ω',
//     members: [
//       'ƒêinh Tr√∫c V√¢n: 22166102',
//       'Nguy·ªÖn Qu·ª≥nh Nhi: 22166065',
//       'H·ªì V√µ Minh Tr∆∞·ªùng: 22166093',
//       'Nguy·ªÖn Minh Ph√∫: 22166069',
//       'Tr·∫ßn Xu√¢n Tr∆∞·ªùng: 22166095',
//       'Nguy·ªÖn Ho√†ng Minh Tu·∫•n: 22166098',
//       'Nguy·ªÖn ƒê·ª©c Tr·ªçng: 22166091',
//       'Tr·∫ßn D∆∞∆°ng Vinh: 22166103',
//     ]
//   };

//   // D·ªØ li·ªáu b·∫£n ƒë·ªì chuy√™n ƒë·ªÅ m·∫´u
//   public thematicLayers = [
//     {
//       name: 'Tr∆∞·ªùng ƒê·∫°i h·ªçc',
//       description: 'C√°c tr∆∞·ªùng ƒë·∫°i h·ªçc t·∫°i TP.HCM',
//       data: [
//         { name: 'ƒêH B√°ch Khoa', lat: 10.7721, lng: 106.6576, info: 'ƒê·∫°i h·ªçc B√°ch khoa TP.HCM' },
//         { name: 'ƒêH Khoa h·ªçc T·ª± nhi√™n', lat: 10.7626, lng: 106.6824, info: 'ƒê·∫°i h·ªçc Khoa h·ªçc T·ª± nhi√™n' },
//         { name: 'ƒêH Kinh t·∫ø', lat: 10.7308, lng: 106.6941, info: 'ƒê·∫°i h·ªçc Kinh t·∫ø TP.HCM' }
//       ]
//     },
//     {
//       name: 'B·ªánh vi·ªán',
//       description: 'C√°c b·ªánh vi·ªán l·ªõn t·∫°i TP.HCM',
//       data: [
//         { name: 'BV Ch·ª£ R·∫´y', lat: 10.7542, lng: 106.6665, info: 'B·ªánh vi·ªán Ch·ª£ R·∫´y' },
//         { name: 'BV B√¨nh Dan', lat: 10.7507, lng: 106.6647, info: 'B·ªánh vi·ªán B√¨nh Dan' },
//         { name: 'BV 115', lat: 10.7825, lng: 106.6958, info: 'B·ªánh vi·ªán 115' }
//       ]
//     }
//   ];

//   constructor(private geolocationService: GeolocationService) { }

//   ngOnInit() {
//     this.folder = this.activatedRoute.snapshot.paramMap.get('id') as string;
//   }

//   ngAfterViewInit() {
//     // Kh·ªüi t·∫°o map sau khi view ƒë√£ render ho√†n to√†n
//     if (this.folder === 'explore') {
//       setTimeout(() => {
//         this.initializeMap();
//       }, 200); // TƒÉng delay ƒë·ªÉ ƒë·∫£m b·∫£o DOM ƒë√£ s·∫µn s√†ng
//     }
//   }

//   ngOnDestroy() {
//     if (this.map) {
//       this.map.remove();
//       this.map = null;
//       this.mapInitialized = false;
//     }
//   }

//   async getCurrentLocation() {
//     try {
//       const permissions = await this.geolocationService.checkPermissions();

//       if (permissions.location !== 'granted') {
//         await this.geolocationService.requestPermissions();
//       }

//       this.currentLocation = await this.geolocationService.getCurrentPosition();

//       if (this.map && this.currentLocation) {
//         // Th√™m marker v·ªã tr√≠ hi·ªán t·∫°i l√™n b·∫£n ƒë·ªì
//         const userMarker = L.marker([this.currentLocation.latitude, this.currentLocation.longitude])
//           .addTo(this.map)
//           .bindPopup(`
//             <div>
//               <h4>V·ªã tr√≠ hi·ªán t·∫°i</h4>
//               <p>Lat: ${this.currentLocation.latitude.toFixed(6)}</p>
//               <p>Lng: ${this.currentLocation.longitude.toFixed(6)}</p>
//               <p>ƒê·ªô ch√≠nh x√°c: ${this.currentLocation.accuracy}m</p>
//             </div>
//           `);

//         // Di chuy·ªÉn b·∫£n ƒë·ªì ƒë·∫øn v·ªã tr√≠ hi·ªán t·∫°i
//         this.map.setView([this.currentLocation.latitude, this.currentLocation.longitude], 15);
//       }
//     } catch (error) {
//       console.error('L·ªói khi l·∫•y v·ªã tr√≠:', error);
//       alert('Kh√¥ng th·ªÉ l·∫•y v·ªã tr√≠ hi·ªán t·∫°i. Vui l√≤ng ki·ªÉm tra quy·ªÅn truy c·∫≠p v·ªã tr√≠.');
//     }
//   }

//   private initializeMap() {
//     // Ki·ªÉm tra n·∫øu map ƒë√£ ƒë∆∞·ª£c kh·ªüi t·∫°o
//     if (this.mapInitialized) {
//       return;
//     }

//     const mapElement = document.getElementById('map');
//     if (!mapElement) {
//       console.error('Map element not found');
//       return;
//     }

//     try {
//       // Kh·ªüi t·∫°o b·∫£n ƒë·ªì v·ªõi c·∫•u h√¨nh t·ªëi ∆∞u
//       this.map = L.map('map', {
//         center: [10.762622, 106.660172],
//         zoom: 11,
//         scrollWheelZoom: true,
//         touchZoom: true,
//         doubleClickZoom: true,
//         boxZoom: false,
//         preferCanvas: true,
//         renderer: L.canvas(),
//         // QUAN TR·ªåNG: C·ªë ƒë·ªãnh k√≠ch th∆∞·ªõc
//         zoomControl: true,
//         attributionControl: true
//       });

//       // S·ª≠ d·ª•ng OpenStreetMap l√†m layer ch√≠nh
//       const osmLayer = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
//         attribution: '¬© OpenStreetMap contributors',
//         maxZoom: 18,
//         minZoom: 8,
//         detectRetina: true
//       }).addTo(this.map);

//       // C√°c layer b·ªï sung
//       const googleSat = L.tileLayer('https://mt1.google.com/vt/lyrs=s&x={x}&y={y}&z={z}', {
//         attribution: '¬© Google',
//         maxZoom: 18,
//         minZoom: 8
//       });

//       const googleStreets = L.tileLayer('https://mt1.google.com/vt/lyrs=m&x={x}&y={y}&z={z}', {
//         attribution: '¬© Google',
//         maxZoom: 18,
//         minZoom: 8
//       });

//       // Control layers
//       const baseMaps = {
//         "OpenStreetMap": osmLayer,
//         "Google Streets": googleStreets,
//         "Google Satellite": googleSat
//       };

//       L.control.layers(baseMaps, undefined, {
//         collapsed: true,
//         position: 'topright'
//       }).addTo(this.map);

//       // QUAN TR·ªåNG: Fix k√≠ch th∆∞·ªõc sau khi kh·ªüi t·∫°o
//       setTimeout(() => {
//         if (this.map) {
//           this.map.invalidateSize();
//         }
//       }, 100);

//       // Th√™m c√°c ƒëi·ªÉm d·ªØ li·ªáu chuy√™n ƒë·ªÅ
//       this.addThematicLayers();

//       this.mapInitialized = true;

//       // X·ª≠ l√Ω s·ª± ki·ªán resize ƒë·ªÉ tr√°nh map b·ªã l·ªói k√≠ch th∆∞·ªõc
//       this.map.on('resize', () => {
//         if (this.map) {
//           this.map.invalidateSize();
//         }
//       });

//     } catch (error) {
//       console.error('Error initializing map:', error);
//     }
//   }

//   private addThematicLayers() {
//     if (!this.map) {
//       return;
//     }

//     // T·∫°o c√°c icon kh√°c nhau cho t·ª´ng lo·∫°i
//     const universityIcon = L.divIcon({
//       className: 'custom-icon university-icon',
//       html: 'üéì',
//       iconSize: [30, 30],
//       iconAnchor: [15, 15]
//     });

//     const hospitalIcon = L.divIcon({
//       className: 'custom-icon hospital-icon',
//       html: 'üè•',
//       iconSize: [30, 30],
//       iconAnchor: [15, 15]
//     });

//     // Th√™m layer tr∆∞·ªùng ƒë·∫°i h·ªçc
//     this.thematicLayers[0].data.forEach(point => {
//       L.marker([point.lat, point.lng], { icon: universityIcon })
//         .addTo(this.map)
//         .bindPopup(`
//           <div>
//             <h4>${point.name}</h4>
//             <p>${point.info}</p>
//             <p><strong>Lo·∫°i:</strong> Tr∆∞·ªùng ƒê·∫°i h·ªçc</p>
//           </div>
//         `);
//     });

//     // Th√™m layer b·ªánh vi·ªán
//     this.thematicLayers[1].data.forEach(point => {
//       L.marker([point.lat, point.lng], { icon: hospitalIcon })
//         .addTo(this.map)
//         .bindPopup(`
//           <div>
//             <h4>${point.name}</h4>
//             <p>${point.info}</p>
//             <p><strong>Lo·∫°i:</strong> B·ªánh vi·ªán</p>
//           </div>
//         `);
//     });
//   }

//   getPageTitle(): string {
//     switch (this.folder) {
//       case 'home': return 'Trang ch·ªß';
//       case 'about': return 'Gi·ªõi thi·ªáu';
//       case 'explore': return 'Kh√°m ph√° b·∫£n ƒë·ªì';
//       case 'contact': return 'Li√™n h·ªá';
//       default: return this.folder;
//     }
//   }
// }


// import { Component, inject, OnInit, OnDestroy, AfterViewInit } from '@angular/core';
// import { ActivatedRoute } from '@angular/router';
// import { GeolocationService } from 'src/services/geolocation.services';
// import * as L from 'leaflet';

// @Component({
//   selector: 'app-folder',
//   templateUrl: './folder.page.html',
//   styleUrls: ['./folder.page.scss'],
//   standalone: false,
// })
// export class FolderPage implements OnInit, OnDestroy, AfterViewInit {
//   public folder!: string;
//   private activatedRoute = inject(ActivatedRoute);
//   private map: any;
//   private mapInitialized = false;
//   public currentLocation: any;

//   // Th√¥ng tin nh√≥m v√† app
//   public appInfo = {
//     name: 'GIS Mobile App',
//     description: '·ª®ng d·ª•ng b·∫£n ƒë·ªì chuy√™n ƒë·ªÅ s·ª≠ d·ª•ng Ionic Angular',
//     version: '1.0.0'
//   };

//   public teamInfo = {
//     groupName: 'Nh√≥m 9',
//     className: 'DH22HM',
//     major: 'H·ªá th·ªëng th√¥ng tin ƒë·ªãa l√Ω',
//     members: [
//       'ƒêinh Tr√∫c V√¢n: 22166102',
//       'Nguy·ªÖn Qu·ª≥nh Nhi: 22166065',
//       'H·ªì V√µ Minh Tr∆∞·ªùng: 22166093',
//       'Nguy·ªÖn Minh Ph√∫: 22166069',
//       'Tr·∫ßn Xu√¢n Tr∆∞·ªùng: 22166095',
//       'Nguy·ªÖn Ho√†ng Minh Tu·∫•n: 22166098',
//       'Nguy·ªÖn ƒê·ª©c Tr·ªçng: 22166091',
//       'Tr·∫ßn D∆∞∆°ng Vinh: 22166103',
//     ]
//   };

//   // D·ªØ li·ªáu b·∫£n ƒë·ªì chuy√™n ƒë·ªÅ m·ªü r·ªông
//   public thematicLayers = [
//     {
//       name: 'Tr∆∞·ªùng ƒê·∫°i h·ªçc',
//       description: 'C√°c tr∆∞·ªùng ƒë·∫°i h·ªçc t·∫°i TP.HCM',
//       data: [
//         { name: 'ƒêH B√°ch Khoa', lat: 10.7721, lng: 106.6576, info: 'ƒê·∫°i h·ªçc B√°ch khoa TP.HCM - Tr∆∞·ªùng k·ªπ thu·∫≠t h√†ng ƒë·∫ßu' },
//         { name: 'ƒêH Khoa h·ªçc T·ª± nhi√™n', lat: 10.7626, lng: 106.6824, info: 'ƒê·∫°i h·ªçc Khoa h·ªçc T·ª± nhi√™n - ƒêH Qu·ªëc gia' },
//         { name: 'ƒêH Kinh t·∫ø', lat: 10.7308, lng: 106.6941, info: 'ƒê·∫°i h·ªçc Kinh t·∫ø TP.HCM' },
//         { name: 'ƒêH C√¥ng ngh·ªá Th√¥ng tin', lat: 10.7307, lng: 106.6945, info: 'ƒê·∫°i h·ªçc C√¥ng ngh·ªá Th√¥ng tin - ƒêH Qu·ªëc gia' },
//         { name: 'ƒêH Y D∆∞·ª£c', lat: 10.7543, lng: 106.6666, info: 'ƒê·∫°i h·ªçc Y D∆∞·ª£c TP.HCM' },
//         { name: 'ƒêH S∆∞ ph·∫°m', lat: 10.7626, lng: 106.6824, info: 'ƒê·∫°i h·ªçc S∆∞ ph·∫°m TP.HCM' }
//       ]
//     },
//     {
//       name: 'B·ªánh vi·ªán',
//       description: 'C√°c b·ªánh vi·ªán l·ªõn t·∫°i TP.HCM',
//       data: [
//         { name: 'BV Ch·ª£ R·∫´y', lat: 10.7542, lng: 106.6665, info: 'B·ªánh vi·ªán Ch·ª£ R·∫´y - B·ªánh vi·ªán h·∫°ng ƒë·∫∑c bi·ªát' },
//         { name: 'BV B√¨nh Dan', lat: 10.7507, lng: 106.6647, info: 'B·ªánh vi·ªán B√¨nh Dan - B·ªánh vi·ªán ƒëa khoa' },
//         { name: 'BV 115', lat: 10.7825, lng: 106.6958, info: 'B·ªánh vi·ªán 115 - C·∫•p c·ª©u 24/7' },
//         { name: 'BV T·ª´ D≈©', lat: 10.7690, lng: 106.6910, info: 'B·ªánh vi·ªán T·ª´ D≈© - Chuy√™n khoa Ph·ª• s·∫£n' },
//         { name: 'BV Nhi ƒê·ªìng 1', lat: 10.7691, lng: 106.6945, info: 'B·ªánh vi·ªán Nhi ƒê·ªìng 1 - Chuy√™n khoa Nhi' },
//         { name: 'BV Th·ªëng Nh·∫•t', lat: 10.7908, lng: 106.6877, info: 'B·ªánh vi·ªán Th·ªëng Nh·∫•t - B·ªánh vi·ªán ƒëa khoa' }
//       ]
//     },
//     {
//       name: 'Trung t√¢m Th∆∞∆°ng m·∫°i',
//       description: 'C√°c trung t√¢m th∆∞∆°ng m·∫°i l·ªõn t·∫°i TP.HCM',
//       data: [
//         { name: 'Saigon Centre', lat: 10.7797, lng: 106.7010, info: 'Trung t√¢m th∆∞∆°ng m·∫°i Saigon Centre' },
//         { name: 'Vincom Center', lat: 10.7769, lng: 106.7009, info: 'Vincom Center - TTTM cao c·∫•p' },
//         { name: 'Diamond Plaza', lat: 10.7826, lng: 106.7019, info: 'Diamond Plaza - TTTM trung t√¢m' },
//         { name: 'Bitexco Financial Tower', lat: 10.7719, lng: 106.7037, info: 'Bitexco Financial Tower - T√≤a nh√† cao nh·∫•t' }
//       ]
//     }
//   ];

//   constructor(private geolocationService: GeolocationService) { }

//   ngOnInit() {
//     this.folder = this.activatedRoute.snapshot.paramMap.get('id') as string;
//   }

//   ngAfterViewInit() {
//     // Kh·ªüi t·∫°o map sau khi view ƒë√£ render ho√†n to√†n
//     if (this.folder === 'explore') {
//       setTimeout(() => {
//         this.initializeMap();
//       }, 200); // TƒÉng delay ƒë·ªÉ ƒë·∫£m b·∫£o DOM ƒë√£ s·∫µn s√†ng
//     }
//   }

//   ngOnDestroy() {
//     if (this.map) {
//       this.map.remove();
//       this.map = null;
//       this.mapInitialized = false;
//     }
//   }

//   async getCurrentLocation() {
//     try {
//       const permissions = await this.geolocationService.checkPermissions();

//       if (permissions.location !== 'granted') {
//         await this.geolocationService.requestPermissions();
//       }

//       this.currentLocation = await this.geolocationService.getCurrentPosition();

//       if (this.map && this.currentLocation) {
//         // Th√™m marker v·ªã tr√≠ hi·ªán t·∫°i l√™n b·∫£n ƒë·ªì
//         const userMarker = L.marker([this.currentLocation.latitude, this.currentLocation.longitude])
//           .addTo(this.map)
//           .bindPopup(`
//             <div>
//               <h4>V·ªã tr√≠ hi·ªán t·∫°i</h4>
//               <p>Lat: ${this.currentLocation.latitude.toFixed(6)}</p>
//               <p>Lng: ${this.currentLocation.longitude.toFixed(6)}</p>
//               <p>ƒê·ªô ch√≠nh x√°c: ${this.currentLocation.accuracy}m</p>
//             </div>
//           `);

//         // Di chuy·ªÉn b·∫£n ƒë·ªì ƒë·∫øn v·ªã tr√≠ hi·ªán t·∫°i
//         this.map.setView([this.currentLocation.latitude, this.currentLocation.longitude], 15);
//       }
//     } catch (error) {
//       console.error('L·ªói khi l·∫•y v·ªã tr√≠:', error);
//       alert('Kh√¥ng th·ªÉ l·∫•y v·ªã tr√≠ hi·ªán t·∫°i. Vui l√≤ng ki·ªÉm tra quy·ªÅn truy c·∫≠p v·ªã tr√≠.');
//     }
//   }

//   private initializeMap() {
//     // Ki·ªÉm tra n·∫øu map ƒë√£ ƒë∆∞·ª£c kh·ªüi t·∫°o
//     if (this.mapInitialized) {
//       return;
//     }

//     const mapElement = document.getElementById('map');
//     if (!mapElement) {
//       console.error('Map element not found');
//       // Th·ª≠ l·∫°i sau 500ms
//       setTimeout(() => {
//         this.initializeMap();
//       }, 500);
//       return;
//     }

//     try {
//       console.log('Initializing map...');

//       // Kh·ªüi t·∫°o b·∫£n ƒë·ªì v·ªõi c·∫•u h√¨nh t·ªëi ∆∞u
//       this.map = L.map('map', {
//         center: [10.762622, 106.660172],
//         zoom: 12,
//         scrollWheelZoom: true,
//         touchZoom: true,
//         doubleClickZoom: true,
//         boxZoom: false,
//         preferCanvas: false, // ƒê·ªïi v·ªÅ SVG ƒë·ªÉ ·ªïn ƒë·ªãnh h∆°n
//         zoomControl: true,
//         attributionControl: true
//       });

//       // S·ª≠ d·ª•ng OpenStreetMap l√†m layer ch√≠nh (load nhanh nh·∫•t)
//       const osmLayer = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
//         attribution: '¬© OpenStreetMap contributors',
//         maxZoom: 18,
//         minZoom: 10,
//         detectRetina: false // T·∫Øt ƒë·ªÉ load nhanh h∆°n
//       });

//       // C√°c layer Google Maps
//       const googleSat = L.tileLayer('https://mt1.google.com/vt/lyrs=s&x={x}&y={y}&z={z}', {
//         attribution: '¬© Google',
//         maxZoom: 18,
//         minZoom: 10
//       });

//       const googleStreets = L.tileLayer('https://mt1.google.com/vt/lyrs=m&x={x}&y={y}&z={z}', {
//         attribution: '¬© Google',
//         maxZoom: 18,
//         minZoom: 10
//       });

//       // Th√™m layer m·∫∑c ƒë·ªãnh ngay l·∫≠p t·ª©c
//       osmLayer.addTo(this.map);

//       // Control layers
//       const baseMaps = {
//         "OpenStreetMap": osmLayer,
//         "Google Streets": googleStreets,
//         "Google Satellite": googleSat
//       };

//       L.control.layers(baseMaps, undefined, {
//         collapsed: true,
//         position: 'topright'
//       }).addTo(this.map);

//       // Event khi map ƒë√£ s·∫µn s√†ng
//       this.map.whenReady(() => {
//         console.log('Map is ready');

//         // Fix k√≠ch th∆∞·ªõc
//         setTimeout(() => {
//           if (this.map) {
//             this.map.invalidateSize();
//             console.log('Map size invalidated');
//           }
//         }, 100);

//         // Th√™m c√°c ƒëi·ªÉm d·ªØ li·ªáu chuy√™n ƒë·ªÅ NGAY KHI MAP READY
//         setTimeout(() => {
//           this.addThematicLayers();
//           console.log('Thematic layers added');
//         }, 200);
//       });

//       this.mapInitialized = true;
//       console.log('Map initialization completed');

//     } catch (error) {
//       console.error('Error initializing map:', error);
//       // Th·ª≠ l·∫°i sau 1 gi√¢y
//       setTimeout(() => {
//         this.mapInitialized = false;
//         this.initializeMap();
//       }, 1000);
//     }
//   }

//   private addThematicLayers() {
//     if (!this.map) {
//       console.error('Map not initialized for thematic layers');
//       return;
//     }

//     console.log('Adding thematic layers...');

//     try {
//       // T·∫°o c√°c icon kh√°c nhau cho t·ª´ng lo·∫°i v·ªõi style r√µ r√†ng
//       const universityIcon = L.divIcon({
//         className: 'custom-icon university-icon',
//         html: '<div style="background: #4285f4; color: white; border-radius: 50%; width: 30px; height: 30px; display: flex; align-items: center; justify-content: center; font-size: 16px; box-shadow: 0 2px 6px rgba(0,0,0,0.3);">üéì</div>',
//         iconSize: [30, 30],
//         iconAnchor: [15, 15]
//       });

//       const hospitalIcon = L.divIcon({
//         className: 'custom-icon hospital-icon',
//         html: '<div style="background: #ea4335; color: white; border-radius: 50%; width: 30px; height: 30px; display: flex; align-items: center; justify-content: center; font-size: 16px; box-shadow: 0 2px 6px rgba(0,0,0,0.3);">üè•</div>',
//         iconSize: [30, 30],
//         iconAnchor: [15, 15]
//       });

//       // T·∫°o layer groups ƒë·ªÉ qu·∫£n l√Ω
//       const universityGroup = L.layerGroup();
//       const hospitalGroup = L.layerGroup();

//       // Th√™m layer tr∆∞·ªùng ƒë·∫°i h·ªçc
//       console.log('Adding university markers...');
//       this.thematicLayers[0].data.forEach((point, index) => {
//         console.log(`Adding university ${index + 1}: ${point.name}`);
//         const marker = L.marker([point.lat, point.lng], { icon: universityIcon })
//           .bindPopup(`
//             <div style="padding: 10px;">
//               <h4 style="margin: 0 0 8px 0; color: #4285f4;">${point.name}</h4>
//               <p style="margin: 4px 0;">${point.info}</p>
//               <p style="margin: 4px 0;"><strong>Lo·∫°i:</strong> Tr∆∞·ªùng ƒê·∫°i h·ªçc</p>
//               <p style="margin: 4px 0; font-size: 12px; color: #666;">Lat: ${point.lat}, Lng: ${point.lng}</p>
//             </div>
//           `);

//         marker.addTo(universityGroup);
//         marker.addTo(this.map); // Th√™m tr·ª±c ti·∫øp v√†o map
//       });

//       // Th√™m layer b·ªánh vi·ªán
//       console.log('Adding hospital markers...');
//       this.thematicLayers[1].data.forEach((point, index) => {
//         console.log(`Adding hospital ${index + 1}: ${point.name}`);
//         const marker = L.marker([point.lat, point.lng], { icon: hospitalIcon })
//           .bindPopup(`
//             <div style="padding: 10px;">
//               <h4 style="margin: 0 0 8px 0; color: #ea4335;">${point.name}</h4>
//               <p style="margin: 4px 0;">${point.info}</p>
//               <p style="margin: 4px 0;"><strong>Lo·∫°i:</strong> B·ªánh vi·ªán</p>
//               <p style="margin: 4px 0; font-size: 12px; color: #666;">Lat: ${point.lat}, Lng: ${point.lng}</p>
//             </div>
//           `);

//         marker.addTo(hospitalGroup);
//         marker.addTo(this.map); // Th√™m tr·ª±c ti·∫øp v√†o map
//       });

//       // Th√™m overlay controls ƒë·ªÉ c√≥ th·ªÉ toggle on/off
//       const overlayMaps = {
//         "üéì Tr∆∞·ªùng ƒê·∫°i h·ªçc": universityGroup,
//         "üè• B·ªánh vi·ªán": hospitalGroup
//       };

//       // C·∫≠p nh·∫≠t layer control v·ªõi overlays
//       const baseMaps = {
//         "OpenStreetMap": L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'),
//         "Google Streets": L.tileLayer('https://mt1.google.com/vt/lyrs=m&x={x}&y={y}&z={z}'),
//         "Google Satellite": L.tileLayer('https://mt1.google.com/vt/lyrs=s&x={x}&y={y}&z={z}')
//       };

//       // X√≥a control c≈© n·∫øu c√≥
//       this.map.eachLayer((layer: any) => {
//         if (layer instanceof L.Control.Layers) {
//           this.map.removeControl(layer);
//         }
//       });

//       // Th√™m control m·ªõi
//       L.control.layers(baseMaps, overlayMaps, {
//         collapsed: false, // M·ªü r·ªông ƒë·ªÉ d·ªÖ th·∫•y
//         position: 'topright'
//       }).addTo(this.map);

//       // Th√™m c√°c group v√†o map
//       universityGroup.addTo(this.map);
//       hospitalGroup.addTo(this.map);

//       console.log('Thematic layers added successfully');

//       // Fit map bounds ƒë·ªÉ hi·ªÉn th·ªã t·∫•t c·∫£ markers
//       const allPoints = [
//         ...this.thematicLayers[0].data.map(p => [p.lat, p.lng]),
//         ...this.thematicLayers[1].data.map(p => [p.lat, p.lng])
//       ];

//       if (allPoints.length > 0) {
//         const group = new L.featureGroup(
//           allPoints.map(point => L.marker(point as [number, number]))
//         );
//         this.map.fitBounds(group.getBounds().pad(0.1));
//       }

//     } catch (error) {
//       console.error('Error adding thematic layers:', error);
//     }
//   }

//   getPageTitle(): string {
//     switch (this.folder) {
//       case 'home': return 'Trang ch·ªß';
//       case 'about': return 'Gi·ªõi thi·ªáu';
//       case 'explore': return 'Kh√°m ph√° b·∫£n ƒë·ªì';
//       case 'contact': return 'Li√™n h·ªá';
//       default: return this.folder;
//     }
//   }
// }


import { Component, inject, OnInit, OnDestroy, AfterViewInit } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { GeolocationService } from 'src/services/geolocation.services';
import * as L from 'leaflet';

@Component({
  selector: 'app-folder',
  templateUrl: './folder.page.html',
  styleUrls: ['./folder.page.scss'],
  standalone: false,
})
export class FolderPage implements OnInit, OnDestroy, AfterViewInit {
  public folder!: string;
  private activatedRoute = inject(ActivatedRoute);
  private map: any;
  private mapInitialized = false;
  public currentLocation: any;

  // Th√¥ng tin nh√≥m v√† app
  public appInfo = {
    name: 'GIS Mobile App',
    description: '·ª®ng d·ª•ng b·∫£n ƒë·ªì chuy√™n ƒë·ªÅ s·ª≠ d·ª•ng Ionic Angular',
    version: '1.0.0'
  };

  public teamInfo = {
    groupName: 'Nh√≥m 9',
    className: 'DH22HM',
    major: 'H·ªá th·ªëng th√¥ng tin ƒë·ªãa l√Ω',
    members: [
      'ƒêinh Tr√∫c V√¢n: 22166102',
      'Nguy·ªÖn Qu·ª≥nh Nhi: 22166065',
      'H·ªì V√µ Minh Tr∆∞·ªùng: 22166093',
      'Nguy·ªÖn Minh Ph√∫: 22166069',
      'Tr·∫ßn Xu√¢n Tr∆∞·ªùng: 22166095',
      'Nguy·ªÖn Ho√†ng Minh Tu·∫•n: 22166098',
      'Nguy·ªÖn ƒê·ª©c Tr·ªçng: 22166091',
      'Tr·∫ßn D∆∞∆°ng Vinh: 22166103',
    ]
  };

  // D·ªØ li·ªáu b·∫£n ƒë·ªì chuy√™n ƒë·ªÅ m·ªü r·ªông
  public thematicLayers = [
    {
      name: 'Tr∆∞·ªùng ƒê·∫°i h·ªçc',
      description: 'C√°c tr∆∞·ªùng ƒë·∫°i h·ªçc t·∫°i TP.HCM',
      data: [
        { name: 'ƒêH B√°ch Khoa', lat: 10.7721, lng: 106.6576, info: 'ƒê·∫°i h·ªçc B√°ch khoa TP.HCM - Tr∆∞·ªùng k·ªπ thu·∫≠t h√†ng ƒë·∫ßu' },
        { name: 'ƒêH Khoa h·ªçc T·ª± nhi√™n', lat: 10.7626, lng: 106.6824, info: 'ƒê·∫°i h·ªçc Khoa h·ªçc T·ª± nhi√™n - ƒêH Qu·ªëc gia' },
        { name: 'ƒêH Kinh t·∫ø', lat: 10.7308, lng: 106.6941, info: 'ƒê·∫°i h·ªçc Kinh t·∫ø TP.HCM' },
        { name: 'ƒêH C√¥ng ngh·ªá Th√¥ng tin', lat: 10.7307, lng: 106.6945, info: 'ƒê·∫°i h·ªçc C√¥ng ngh·ªá Th√¥ng tin - ƒêH Qu·ªëc gia' },
        { name: 'ƒêH Y D∆∞·ª£c', lat: 10.7543, lng: 106.6666, info: 'ƒê·∫°i h·ªçc Y D∆∞·ª£c TP.HCM' },
        { name: 'ƒêH S∆∞ ph·∫°m', lat: 10.7626, lng: 106.6824, info: 'ƒê·∫°i h·ªçc S∆∞ ph·∫°m TP.HCM' }
      ]
    },
    {
      name: 'B·ªánh vi·ªán',
      description: 'C√°c b·ªánh vi·ªán l·ªõn t·∫°i TP.HCM',
      data: [
        { name: 'BV Ch·ª£ R·∫´y', lat: 10.7542, lng: 106.6665, info: 'B·ªánh vi·ªán Ch·ª£ R·∫´y - B·ªánh vi·ªán h·∫°ng ƒë·∫∑c bi·ªát' },
        { name: 'BV B√¨nh Dan', lat: 10.7507, lng: 106.6647, info: 'B·ªánh vi·ªán B√¨nh Dan - B·ªánh vi·ªán ƒëa khoa' },
        { name: 'BV 115', lat: 10.7825, lng: 106.6958, info: 'B·ªánh vi·ªán 115 - C·∫•p c·ª©u 24/7' },
        { name: 'BV T·ª´ D≈©', lat: 10.7690, lng: 106.6910, info: 'B·ªánh vi·ªán T·ª´ D≈© - Chuy√™n khoa Ph·ª• s·∫£n' },
        { name: 'BV Nhi ƒê·ªìng 1', lat: 10.7691, lng: 106.6945, info: 'B·ªánh vi·ªán Nhi ƒê·ªìng 1 - Chuy√™n khoa Nhi' },
        { name: 'BV Th·ªëng Nh·∫•t', lat: 10.7908, lng: 106.6877, info: 'B·ªánh vi·ªán Th·ªëng Nh·∫•t - B·ªánh vi·ªán ƒëa khoa' }
      ]
    },
    {
      name: 'Trung t√¢m Th∆∞∆°ng m·∫°i',
      description: 'C√°c trung t√¢m th∆∞∆°ng m·∫°i l·ªõn t·∫°i TP.HCM',
      data: [
        { name: 'Saigon Centre', lat: 10.7797, lng: 106.7010, info: 'Trung t√¢m th∆∞∆°ng m·∫°i Saigon Centre' },
        { name: 'Vincom Center', lat: 10.7769, lng: 106.7009, info: 'Vincom Center - TTTM cao c·∫•p' },
        { name: 'Diamond Plaza', lat: 10.7826, lng: 106.7019, info: 'Diamond Plaza - TTTM trung t√¢m' },
        { name: 'Bitexco Financial Tower', lat: 10.7719, lng: 106.7037, info: 'Bitexco Financial Tower - T√≤a nh√† cao nh·∫•t' }
      ]
    }
  ];

  constructor(private geolocationService: GeolocationService) { }

  ngOnInit() {
    this.folder = this.activatedRoute.snapshot.paramMap.get('id') as string;
  }

  ngAfterViewInit() {
    // Kh·ªüi t·∫°o map sau khi view ƒë√£ render ho√†n to√†n
    if (this.folder === 'explore') {
      // Gi·∫£m delay ƒë·ªÉ load nhanh h∆°n
      setTimeout(() => {
        this.initializeMap();
      }, 50);
    }
  }

  ngOnDestroy() {
    if (this.map) {
      this.map.remove();
      this.map = null;
      this.mapInitialized = false;
    }
  }

  async getCurrentLocation() {
    try {
      const permissions = await this.geolocationService.checkPermissions();

      if (permissions.location !== 'granted') {
        await this.geolocationService.requestPermissions();
      }

      this.currentLocation = await this.geolocationService.getCurrentPosition();

      if (this.map && this.currentLocation) {
        // Th√™m marker v·ªã tr√≠ hi·ªán t·∫°i l√™n b·∫£n ƒë·ªì
        const userMarker = L.marker([this.currentLocation.latitude, this.currentLocation.longitude])
          .addTo(this.map)
          .bindPopup(`
            <div>
              <h4>V·ªã tr√≠ hi·ªán t·∫°i</h4>
              <p>Lat: ${this.currentLocation.latitude.toFixed(6)}</p>
              <p>Lng: ${this.currentLocation.longitude.toFixed(6)}</p>
              <p>ƒê·ªô ch√≠nh x√°c: ${this.currentLocation.accuracy}m</p>
            </div>
          `);

        // Di chuy·ªÉn b·∫£n ƒë·ªì ƒë·∫øn v·ªã tr√≠ hi·ªán t·∫°i
        this.map.setView([this.currentLocation.latitude, this.currentLocation.longitude], 15);
      }
    } catch (error) {
      console.error('L·ªói khi l·∫•y v·ªã tr√≠:', error);
      alert('Kh√¥ng th·ªÉ l·∫•y v·ªã tr√≠ hi·ªán t·∫°i. Vui l√≤ng ki·ªÉm tra quy·ªÅn truy c·∫≠p v·ªã tr√≠.');
    }
  }

  private initializeMap() {
    // Ki·ªÉm tra n·∫øu map ƒë√£ ƒë∆∞·ª£c kh·ªüi t·∫°o
    if (this.mapInitialized) {
      return;
    }

    const mapElement = document.getElementById('map');
    if (!mapElement) {
      console.error('Map element not found');
      // Th·ª≠ l·∫°i sau 500ms
      setTimeout(() => {
        this.initializeMap();
      }, 500);
      return;
    }

    try {
      console.log('Initializing map...');

      // Kh·ªüi t·∫°o b·∫£n ƒë·ªì v·ªõi c·∫•u h√¨nh t·ªëi ∆∞u
      this.map = L.map('map', {
        center: [10.762622, 106.660172],
        zoom: 12,
        scrollWheelZoom: true,
        touchZoom: true,
        doubleClickZoom: true,
        boxZoom: false,
        preferCanvas: false, // ƒê·ªïi v·ªÅ SVG ƒë·ªÉ ·ªïn ƒë·ªãnh h∆°n
        zoomControl: true,
        attributionControl: true
      });

      // S·ª≠ d·ª•ng OpenStreetMap l√†m layer ch√≠nh (load nhanh nh·∫•t)
      const osmLayer = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '¬© OpenStreetMap contributors',
        maxZoom: 18,
        minZoom: 10,
        detectRetina: false // T·∫Øt ƒë·ªÉ load nhanh h∆°n
      });

      // C√°c layer Google Maps
      const googleSat = L.tileLayer('https://mt1.google.com/vt/lyrs=s&x={x}&y={y}&z={z}', {
        attribution: '¬© Google',
        maxZoom: 18,
        minZoom: 10
      });

      const googleStreets = L.tileLayer('https://mt1.google.com/vt/lyrs=m&x={x}&y={y}&z={z}', {
        attribution: '¬© Google',
        maxZoom: 18,
        minZoom: 10
      });

      // Th√™m layer m·∫∑c ƒë·ªãnh ngay l·∫≠p t·ª©c
      osmLayer.addTo(this.map);

      // Control layers
      const baseMaps = {
        "OpenStreetMap": osmLayer,
        "Google Streets": googleStreets,
        "Google Satellite": googleSat
      };

      L.control.layers(baseMaps, undefined, {
        collapsed: true,
        position: 'topright'
      }).addTo(this.map);

      // Event khi map ƒë√£ s·∫µn s√†ng
      this.map.whenReady(() => {
        console.log('Map is ready');

        // Fix k√≠ch th∆∞·ªõc
        setTimeout(() => {
          if (this.map) {
            this.map.invalidateSize();
            console.log('Map size invalidated');
          }
        }, 100);

        // Th√™m c√°c ƒëi·ªÉm d·ªØ li·ªáu chuy√™n ƒë·ªÅ NGAY KHI MAP READY
        setTimeout(() => {
          this.addThematicLayers();
          console.log('Thematic layers added');
        }, 200);
      });

      this.mapInitialized = true;
      console.log('Map initialization completed');

    } catch (error) {
      console.error('Error initializing map:', error);
      // Th·ª≠ l·∫°i sau 1 gi√¢y
      setTimeout(() => {
        this.mapInitialized = false;
        this.initializeMap();
      }, 1000);
    }
  }

  private addThematicLayers() {
    if (!this.map) {
      console.error('Map not initialized for thematic layers');
      return;
    }

    console.log('Adding thematic layers...');

    try {
      // T·∫°o c√°c icon kh√°c nhau cho t·ª´ng lo·∫°i v·ªõi style r√µ r√†ng
      const universityIcon = L.divIcon({
        className: 'custom-icon university-icon',
        html: '<div style="background: #4285f4; color: white; border-radius: 50%; width: 30px; height: 30px; display: flex; align-items: center; justify-content: center; font-size: 16px; box-shadow: 0 2px 6px rgba(0,0,0,0.3);">üéì</div>',
        iconSize: [30, 30],
        iconAnchor: [15, 15]
      });

      const hospitalIcon = L.divIcon({
        className: 'custom-icon hospital-icon',
        html: '<div style="background: #ea4335; color: white; border-radius: 50%; width: 30px; height: 30px; display: flex; align-items: center; justify-content: center; font-size: 16px; box-shadow: 0 2px 6px rgba(0,0,0,0.3);">üè•</div>',
        iconSize: [30, 30],
        iconAnchor: [15, 15]
      });

      const shoppingIcon = L.divIcon({
        className: 'custom-icon shopping-icon',
        html: '<div style="background: #34a853; color: white; border-radius: 50%; width: 30px; height: 30px; display: flex; align-items: center; justify-content: center; font-size: 16px; box-shadow: 0 2px 6px rgba(0,0,0,0.3);">üõçÔ∏è</div>',
        iconSize: [30, 30],
        iconAnchor: [15, 15]
      });

      // T·∫°o layer groups ƒë·ªÉ qu·∫£n l√Ω
      const universityGroup = L.layerGroup();
      const hospitalGroup = L.layerGroup();
      const shoppingGroup = L.layerGroup();

      // Th√™m layer tr∆∞·ªùng ƒë·∫°i h·ªçc
      console.log('Adding university markers...');
      this.thematicLayers[0].data.forEach((point, index) => {
        console.log(`Adding university ${index + 1}: ${point.name}`);
        const marker = L.marker([point.lat, point.lng], { icon: universityIcon })
          .bindPopup(`
            <div style="padding: 10px;">
              <h4 style="margin: 0 0 8px 0; color: #4285f4;">${point.name}</h4>
              <p style="margin: 4px 0;">${point.info}</p>
              <p style="margin: 4px 0;"><strong>Lo·∫°i:</strong> Tr∆∞·ªùng ƒê·∫°i h·ªçc</p>
              <p style="margin: 4px 0; font-size: 12px; color: #666;">Lat: ${point.lat}, Lng: ${point.lng}</p>
            </div>
          `);

        marker.addTo(universityGroup);
        marker.addTo(this.map); // Th√™m tr·ª±c ti·∫øp v√†o map
      });

      // Th√™m layer b·ªánh vi·ªán
      console.log('Adding hospital markers...');
      this.thematicLayers[1].data.forEach((point, index) => {
        console.log(`Adding hospital ${index + 1}: ${point.name}`);
        const marker = L.marker([point.lat, point.lng], { icon: hospitalIcon })
          .bindPopup(`
            <div style="padding: 10px;">
              <h4 style="margin: 0 0 8px 0; color: #ea4335;">${point.name}</h4>
              <p style="margin: 4px 0;">${point.info}</p>
              <p style="margin: 4px 0;"><strong>Lo·∫°i:</strong> B·ªánh vi·ªán</p>
              <p style="margin: 4px 0; font-size: 12px; color: #666;">Lat: ${point.lat}, Lng: ${point.lng}</p>
            </div>
          `);

        marker.addTo(hospitalGroup);
        marker.addTo(this.map); // Th√™m tr·ª±c ti·∫øp v√†o map
      });

      // Th√™m layer trung t√¢m th∆∞∆°ng m·∫°i
      console.log('Adding shopping center markers...');
      this.thematicLayers[2].data.forEach((point, index) => {
        console.log(`Adding shopping center ${index + 1}: ${point.name}`);
        const marker = L.marker([point.lat, point.lng], { icon: shoppingIcon })
          .bindPopup(`
            <div style="padding: 10px;">
              <h4 style="margin: 0 0 8px 0; color: #34a853;">${point.name}</h4>
              <p style="margin: 4px 0;">${point.info}</p>
              <p style="margin: 4px 0;"><strong>Lo·∫°i:</strong> Trung t√¢m Th∆∞∆°ng m·∫°i</p>
              <p style="margin: 4px 0; font-size: 12px; color: #666;">Lat: ${point.lat}, Lng: ${point.lng}</p>
            </div>
          `);

        marker.addTo(shoppingGroup);
        marker.addTo(this.map); // Th√™m tr·ª±c ti·∫øp v√†o map
      });

      // Th√™m overlay controls ƒë·ªÉ c√≥ th·ªÉ toggle on/off
      const overlayMaps = {
        "üéì Tr∆∞·ªùng ƒê·∫°i h·ªçc": universityGroup,
        "üè• B·ªánh vi·ªán": hospitalGroup,
        "üõçÔ∏è Trung t√¢m TM": shoppingGroup
      };

      // C·∫≠p nh·∫≠t layer control v·ªõi overlays
      const baseMaps = {
        "OpenStreetMap": L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'),
        "Google Streets": L.tileLayer('https://mt1.google.com/vt/lyrs=m&x={x}&y={y}&z={z}'),
        "Google Satellite": L.tileLayer('https://mt1.google.com/vt/lyrs=s&x={x}&y={y}&z={z}')
      };

      // X√≥a control c≈© n·∫øu c√≥
      this.map.eachLayer((layer: any) => {
        if (layer instanceof L.Control.Layers) {
          this.map.removeControl(layer);
        }
      });

      // Th√™m control m·ªõi
      L.control.layers(baseMaps, overlayMaps, {
        collapsed: false, // M·ªü r·ªông ƒë·ªÉ d·ªÖ th·∫•y
        position: 'topright'
      }).addTo(this.map);

      // Th√™m c√°c group v√†o map
      universityGroup.addTo(this.map);
      hospitalGroup.addTo(this.map);
      shoppingGroup.addTo(this.map);

      console.log('Thematic layers added successfully');

      // Fit map bounds ƒë·ªÉ hi·ªÉn th·ªã t·∫•t c·∫£ markers
      const allPoints = [
        ...this.thematicLayers[0].data.map(p => [p.lat, p.lng]),
        ...this.thematicLayers[1].data.map(p => [p.lat, p.lng]),
        ...this.thematicLayers[2].data.map(p => [p.lat, p.lng])
      ];

      if (allPoints.length > 0) {
        const group = L.featureGroup(
          allPoints.map(point => L.marker(point as [number, number]))
        );
        this.map.fitBounds(group.getBounds().pad(0.1));
      }

    } catch (error) {
      console.error('Error adding thematic layers:', error);
    }
  }

  getPageTitle(): string {
    switch (this.folder) {
      case 'home': return 'Trang ch·ªß';
      case 'about': return 'Gi·ªõi thi·ªáu';
      case 'explore': return 'Kh√°m ph√° b·∫£n ƒë·ªì';
      case 'contact': return 'Li√™n h·ªá';
      default: return this.folder;
    }
  }
}
